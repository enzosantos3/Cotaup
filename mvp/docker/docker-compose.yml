version: "3.8"

services:
  db:
    image: postgres:15
    container_name: postgres-db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend-net

  app:
    image: openjdk:17-jdk
    container_name: spring-api
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/target/app.jar:/app/app.jar:ro
    env_file: .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SERVER_PORT: ${SERVER_PORT:-8080}
    command: ["java","-jar","/app/app.jar"]
    ports:
      - "${SERVER_PORT:-8080}:8080"
    networks:
      - backend-net

volumes:
  pgdata:

networks:
  backend-net:
    driver: bridge
